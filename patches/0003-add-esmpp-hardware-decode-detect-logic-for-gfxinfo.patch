From 5211e7551ecb799319e54054b4aed04cd158a362 Mon Sep 17 00:00:00 2001
From: CHEN <chenxuan@iscas.ac.cn>
Date: Thu, 16 Oct 2025 09:54:32 +0000
Subject: [PATCH 03/12] add esmpp hardware decode detect logic for gfxinfo

---
 widget/gtk/GfxInfo.cpp | 22 ++++++++++++++++++++--
 widget/gtk/GfxInfo.h   |  3 +++
 2 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/widget/gtk/GfxInfo.cpp b/widget/gtk/GfxInfo.cpp
index 01a69bd722..e7995749df 100644
--- a/widget/gtk/GfxInfo.cpp
+++ b/widget/gtk/GfxInfo.cpp
@@ -41,10 +41,12 @@
 #define GFX_TEST_TIMEOUT 4000
 #define VAAPI_TEST_TIMEOUT 2000
 #define V4L2_TEST_TIMEOUT 2000
+#define ESMPP_TEST_TIMEOUT 2000
 
 #define GLX_PROBE_BINARY u"glxtest"_ns
 #define VAAPI_PROBE_BINARY u"vaapitest"_ns
 #define V4L2_PROBE_BINARY u"v4l2test"_ns
+#define ESMPP_PROBE_BINARY u"esmpptest"_ns
 
 namespace mozilla::widget {
 
@@ -852,6 +854,19 @@ void GfxInfo::V4L2ProbeDevice(nsCString& dev) {
   }
 }
 
+void GfxInfo::GetDataESMPP() {
+  if (mIsESMPPSupported.isSome()) {
+    return;
+  }
+  mIsESMPPSupported = Some(true);
+
+
+  mVAAPISupportedCodecs = CODEC_HW_H264;
+
+  media::MCSInfo::AddSupport(
+      media::MediaCodecsSupport::H264HardwareDecode);
+}
+
 const nsTArray<RefPtr<GfxDriverInfo>>& GfxInfo::GetGfxDriverInfo() {
   if (!sDriverInfo->Length()) {
     // Mesa 10.0 provides the GLX_MESA_query_renderer extension, which allows us
@@ -1375,7 +1390,8 @@ nsresult GfxInfo::GetFeatureStatusImpl(
       continue;
     }
     if ((mVAAPISupportedCodecs & pair.mCodec) ||
-        (mV4L2SupportedCodecs & pair.mCodec)) {
+        (mV4L2SupportedCodecs & pair.mCodec)  ||
+        (mESMPPSupportedCodecs & pair.mCodec)) {
       *aStatus = nsIGfxInfo::FEATURE_STATUS_OK;
     } else {
       *aStatus = nsIGfxInfo::FEATURE_BLOCKED_PLATFORM_TEST;
@@ -1399,11 +1415,13 @@ nsresult GfxInfo::GetFeatureStatusImpl(
     if (probeHWDecode) {
       GetDataVAAPI();
       GetDataV4L2();
+      GetDataESMPP();
     } else {
       mIsVAAPISupported = Some(false);
       mIsV4L2Supported = Some(false);
+      mIsESMPPSupported = Some(false);
     }
-    if (!mIsVAAPISupported.value() && !mIsV4L2Supported.value()) {
+    if (!mIsVAAPISupported.value() && !mIsV4L2Supported.value() && !mIsESMPPSupported.value()) {
       *aStatus = nsIGfxInfo::FEATURE_BLOCKED_PLATFORM_TEST;
       aFailureId = "FEATURE_FAILURE_VIDEO_DECODING_TEST_FAILED";
     }
diff --git a/widget/gtk/GfxInfo.h b/widget/gtk/GfxInfo.h
index e67dacd411..d274c94530 100644
--- a/widget/gtk/GfxInfo.h
+++ b/widget/gtk/GfxInfo.h
@@ -129,6 +129,8 @@ class GfxInfo final : public GfxInfoBase {
   int mVAAPISupportedCodecs = 0;
   mozilla::Maybe<bool> mIsV4L2Supported;
   int mV4L2SupportedCodecs = 0;
+  mozilla::Maybe<bool> mIsESMPPSupported;
+  int mESMPPSupportedCodecs = 0;
 
   static int sGLXTestPipe;
   static pid_t sGLXTestPID;
@@ -139,6 +141,7 @@ class GfxInfo final : public GfxInfoBase {
 
   void GetDataVAAPI();
   void GetDataV4L2();
+  void GetDataESMPP();
   void V4L2ProbeDevice(nsCString& dev);
   void AddCrashReportAnnotations();
 };
-- 
2.48.1

