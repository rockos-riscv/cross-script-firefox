From 892112558a8dfc57cb4fcd4fceffb0866926820c Mon Sep 17 00:00:00 2001
From: Sakura286 <Sakura286>
Date: Wed, 3 Sep 2025 02:15:35 +0000
Subject: [PATCH 12/12] Detect PVR on startup

---
 dom/media/platforms/ffmpeg/FFmpegVideoDecoder.cpp | 15 +++++++++++++++
 gfx/config/gfxFeature.h                           |  1 +
 gfx/config/gfxVars.h                              |  1 +
 gfx/thebes/gfxPlatform.cpp                        | 14 ++++++++++++++
 4 files changed, 31 insertions(+)

diff --git a/dom/media/platforms/ffmpeg/FFmpegVideoDecoder.cpp b/dom/media/platforms/ffmpeg/FFmpegVideoDecoder.cpp
index 07e3313e03..9c36380069 100644
--- a/dom/media/platforms/ffmpeg/FFmpegVideoDecoder.cpp
+++ b/dom/media/platforms/ffmpeg/FFmpegVideoDecoder.cpp
@@ -292,6 +292,11 @@ void FFmpegVideoDecoder<LIBAV_VER>::AdjustHWDecodeLogging() {
 MediaResult FFmpegVideoDecoder<LIBAV_VER>::InitVAAPIDecoder() {
   FFMPEG_LOG("Initialising VA-API FFmpeg decoder");
 
+  if (gfx::gfxVars::IsGPUVendorPVR()) {
+    FFMPEG_LOG("VAAPI is disabled when using built-in IMG GPU.");
+    return NS_ERROR_NOT_AVAILABLE;
+  }
+
   StaticMutexAutoLock mon(sMutex);
 
   // mAcceleratedFormats is already configured so check supported
@@ -462,6 +467,16 @@ MediaResult FFmpegVideoDecoder<LIBAV_VER>::InitV4L2Decoder() {
 
 MediaResult FFmpegVideoDecoder<LIBAV_VER>::InitEsmppDecoder() {
   FFMPEG_LOG("Initialising esmpp-DRM FFmpeg decoder");
+
+  if (!XRE_IsRDDProcess()) {
+    FFMPEG_LOG("ESMPP works in RDD process only");
+    return NS_ERROR_NOT_AVAILABLE;
+  }
+  if (!gfx::gfxVars::IsGPUVendorPVR()) {
+    FFMPEG_LOG("Zero-copy mode of ESMPP only works when PVR gpu is enabled");
+    return NS_ERROR_NOT_AVAILABLE;
+  }
+
   StaticMutexAutoLock mon(sMutex);
 
   // Select the appropriate esmpp codec
diff --git a/gfx/config/gfxFeature.h b/gfx/config/gfxFeature.h
index a92eda502e..1cb567c20c 100644
--- a/gfx/config/gfxFeature.h
+++ b/gfx/config/gfxFeature.h
@@ -41,6 +41,7 @@ namespace gfx {
   _(WINDOW_OCCLUSION, Feature, "WINDOW_OCCLUSION")                           \
   _(HARDWARE_VIDEO_DECODING, Feature, "Hardware video decoding")             \
   _(HARDWARE_VIDEO_ENCODING, Feature, "Hardware video encoding")             \
+  _(IS_GPU_PVR, Feature, "PVR GPU")                                          \
   _(VIDEO_HARDWARE_OVERLAY, Feature, "hardware decoded video overlay")       \
   _(VIDEO_SOFTWARE_OVERLAY, Feature, "software decoded video overlay")       \
   _(HW_DECODED_VIDEO_ZERO_COPY, Feature, "Hardware decoded video zero copy") \
diff --git a/gfx/config/gfxVars.h b/gfx/config/gfxVars.h
index 68f4de0f09..f10acc4f04 100644
--- a/gfx/config/gfxVars.h
+++ b/gfx/config/gfxVars.h
@@ -34,6 +34,7 @@ class gfxVarReceiver;
   _(RequiresAcceleratedGLContextForCompositorOGL, bool, false)     \
   _(CanUseHardwareVideoDecoding, bool, false)                      \
   _(CanUseHardwareVideoEncoding, bool, false)                      \
+  _(IsGPUVendorPVR, bool, false)                                   \
   _(DXInterop2Blocked, bool, false)                                \
   _(DXNV12Blocked, bool, false)                                    \
   _(DXP010Blocked, bool, false)                                    \
diff --git a/gfx/thebes/gfxPlatform.cpp b/gfx/thebes/gfxPlatform.cpp
index 1abbb083a0..1fbc6dab14 100644
--- a/gfx/thebes/gfxPlatform.cpp
+++ b/gfx/thebes/gfxPlatform.cpp
@@ -3061,12 +3061,26 @@ void gfxPlatform::InitHardwareVideoConfig() {
                             "FEATURE_FAILURE_SANITY_TEST_FAILED"_ns);
   }
 
+  FeatureState& featurePVR =
+      gfxConfig::GetFeature(Feature::IS_GPU_PVR);
+  featurePVR.Reset();
+  featurePVR.DisableByDefault(FeatureStatus::Unavailable,
+                              "PowerVR GPU is not Used",
+                              "FEATURE_FAILURE_NO_PVR_GPU"_ns);
+
+  nsString vendorID;
+  if (NS_SUCCEEDED(gfxInfo->GetAdapterVendorID(vendorID)) &&
+      vendorID.EqualsLiteral("Imagination Technologies")) {
+    featurePVR.EnableByDefault();
+  };
+
   InitPlatformHardwareVideoConfig();
   InitPlatformHardwarDRMConfig();
 
   nsCString message;
   gfxVars::SetCanUseHardwareVideoDecoding(featureDec.IsEnabled());
   gfxVars::SetCanUseHardwareVideoEncoding(featureEnc.IsEnabled());
+  gfxVars::SetIsGPUVendorPVR(featurePVR.IsEnabled());
 
 #define CODEC_HW_FEATURE_SETUP(name)                                           \
   FeatureState& featureDec##name =                                             \
-- 
2.43.0

